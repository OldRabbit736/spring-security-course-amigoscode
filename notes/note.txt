Spring security
- 쉽게 security 설정을 할 수 있도록 도와준다.
    - authentication(login, logout, session management)
    - authorization (access control by GrantedAuthority)
    - security (CSRF 등)
- 기능을 사용하려면 크게 다음의 5가지 요소가 필요한 것 같다.
    - WebSecurityConfigurerAdapter.configure(HttpSecurity http) 메서드
    - UserDetail interface 구현체 (실제 User 도메인)
    - UserDetailsService interface 구현체 (실제 User를 반환하는 서비스)
    - PasswordEncoder interface 구현체
    - GrantedAuthority 로 치환될 수 있는 permission, role 구성


WebSecurityConfigurerAdapter.configure(HttpSecurity http)
: authentication, authorization 전반적인 설정을 담당하는 것 같다.
- url 의 authorization 설정
    - 즉, 해당 url을 접근하려면 기본적으로 authentication(login) 되어 있어야 하고,
      해당 grant 또는 role(authorization)을 가지고 있어야 한다.
- 로그인 설정
    - form, basic, oauth2, saml 등 로그인 방식 선택
    - 선택한 로그인 방식의 추가 설정을 설정한다. 예를들어, form login 이라면 login 페이지를 지정할 수 있다.
- Remember me 설정
- CSRF 설정
- 로그아웃 설정
    - 로그아웃 url 지정
    - 쿠키 삭제 지정
    - 로그아웃 후 redirect url 지정 등등


UserDetail interface 구현체 (실제 User 도메인)
: security 기능을 사용하기 위해 필요한 유저 인터페이스. 실제로 사용할 유저 도메인이 이 인터페이스를 구현하면 된다.
- username, password, authorities 반환
- 해당 프로퍼티들을 이용하여 authentication, authorization 기능을 구현


UserDetailsService interface 구현체 (실제 User를 반환하는 서비스)
- UserDetail 을 꺼내오는 서비스이다.


PasswordEncoder interface 구현체
- 유저의 password를 encoding할 수 있는 기능을 제공


GrantedAuthority 로 치환될 수 있는 permission, role 구성
- 유저의 authentication 기능을 위해 정의해야 함.
- url authorization 지정할 때 사용
- 유저가 가진 authorization 지정할 때 사용
